{"version":3,"file":"index.5f2ef3f0e953de4208ba.js","mappings":"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","sources":["webpack://battleship/./src/css/style.css","webpack://battleship/./src/components/handleShip.js","webpack://battleship/./src/components/handleGameBoard.js","webpack://battleship/./src/components/handlePlayer.js","webpack://battleship/./src/components/handleGameController.js","webpack://battleship/./src/components/handleCommon.js","webpack://battleship/./src/components/handleStrategyPanel.js","webpack://battleship/./src/components/handleBattlePanel.js","webpack://battleship/./src/index.js","webpack://battleship/./src/img/battlefield/ships/ sync nonrecursive .\\/(","webpack://battleship/./src/img/strategyPanel/ships/ sync nonrecursive .\\/("],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","const SHIP_LIST = [\n    { name: \"Patrol Boat\", length: 2 },\n    { name: \"Submarine\", length: 3 },\n    { name: \"Destroyer\", length: 3 },\n    { name: \"Battleship\", length: 4 },\n    { name: \"Carrier\", length: 4 },\n];\n\nconst createShip = ({ name } = {}) => {\n    let ship = SHIP_LIST.find((item) => name === item.name);\n\n    if (!ship) return false;\n\n    return Object.assign(Object.create(setProto(ship)), {\n        name: ship.name,\n    });\n};\n\nconst setProto = (ship) => {\n    const length = ship.length;\n    let hits = 0;\n    let rotate = false;\n    let pos = [];\n    let centerPos = [];\n\n    const createShipAllPos = (name, [x, y], isShipRotate) => {\n        const shipPos = [[x, y]];\n\n        if (isShipRotate) {\n            if (name === \"Carrier\") {\n                shipPos.push([x, y - 2]);\n            }\n\n            if (name === \"Battleship\") {\n                shipPos.push([x, y + 2]);\n            }\n\n            if (name !== \"Patrol Boat\") {\n                shipPos.push([x, y - 1]);\n            }\n\n            shipPos.push([x, y + 1]);\n        } else {\n            if (name === \"Carrier\") {\n                shipPos.push([x + 2, y]);\n            }\n\n            if (name === \"Battleship\") {\n                shipPos.push([x - 2, y]);\n            }\n\n            if (name !== \"Patrol Boat\") {\n                shipPos.push([x + 1, y]);\n            }\n\n            shipPos.push([x - 1, y]);\n        }\n\n        return shipPos;\n    };\n\n    return {\n        increaseHit() {\n            return (hits += 1);\n        },\n        isSunk() {\n            return hits === length;\n        },\n        setPos(position, isShipRotate) {\n            if (position.length === 2) {\n                pos = createShipAllPos(this.name, position, isShipRotate);\n            } else {\n                pos = [];\n            }\n\n            return [...pos];\n        },\n        getPos() {\n            return [...pos];\n        },\n        getHealthyPercent() {\n            return (100 / length) * hits;\n        },\n        setRotate(value) {\n            return (rotate = value);\n        },\n        getRotate() {\n            return rotate;\n        },\n        setCenterPos(position) {\n            centerPos = position;\n            return [...centerPos];\n        },\n        getCenterPos() {\n            return [...centerPos];\n        },\n    };\n};\n\nexport { createShip, SHIP_LIST };\n","const createGameBoard = ({ size = 10 } = {}) => {\n    return Object.assign(Object.create(setProto(size)), { size });\n};\n\nconst setProto = (size) => {\n    let ships = [];\n\n    const getAdjacentPos = (pos) => {\n        const adjacentPos = [];\n\n        const posX = pos.map(([x]) => x);\n        const posY = pos.map(([, y]) => y);\n\n        const isRotate = posX.every((x) => x === posX[0]);\n\n        if (isRotate) {\n            const [maxPosY, minPosY] = [Math.max(...posY), Math.min(...posY)];\n\n            for (let y of posY) {\n                adjacentPos.push([posX[0] + 1, y]);\n                adjacentPos.push([posX[0] - 1, y]);\n            }\n\n            adjacentPos.push([posX[0] + 1, maxPosY + 1]);\n            adjacentPos.push([posX[0], maxPosY + 1]);\n            adjacentPos.push([posX[0] - 1, maxPosY + 1]);\n\n            adjacentPos.push([posX[0] + 1, minPosY - 1]);\n            adjacentPos.push([posX[0], minPosY - 1]);\n            adjacentPos.push([posX[0] - 1, minPosY - 1]);\n        } else {\n            const [maxPosX, minPosX] = [Math.max(...posX), Math.min(...posX)];\n\n            for (let x of posX) {\n                adjacentPos.push([x, posY[0] + 1]);\n                adjacentPos.push([x, posY[0] - 1]);\n            }\n\n            adjacentPos.push([maxPosX + 1, posY[0] + 1]);\n            adjacentPos.push([maxPosX + 1, posY[0]]);\n            adjacentPos.push([maxPosX + 1, posY[0] - 1]);\n\n            adjacentPos.push([minPosX - 1, posY[0] + 1]);\n            adjacentPos.push([minPosX - 1, posY[0]]);\n            adjacentPos.push([minPosX - 1, posY[0] - 1]);\n        }\n\n        return adjacentPos;\n    };\n\n    return {\n        addShip(ship) {\n            ships = [...ships, ship];\n            return ships;\n        },\n        getShip(name) {\n            return ships.find((ship) => ship.name === name) ?? false;\n        },\n        getAllShips() {\n            return [...ships];\n        },\n        isOutBounds(positions) {\n            for (let [x, y] of positions) {\n                if (x < 1 || y < 1 || x > size || y > size) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isOverlapShip(positions, name) {\n            for (let ship of ships) {\n                if (name !== ship.name) {\n                    const allShipPos = [\n                        ...ship.getPos(),\n                        ...getAdjacentPos(ship.getPos()),\n                    ];\n                    const result = allShipPos.some(([x, y]) =>\n                        positions.some(([x2, y2]) => x === x2 && y === y2)\n                    );\n\n                    if (result) return true;\n                }\n            }\n\n            return false;\n        },\n        receiveAttack(attackedPos) {\n            const [x, y] = attackedPos;\n\n            const ship =\n                ships.find((ship) =>\n                    ship\n                        .getPos()\n                        .find(\n                            ([shipPosX, shipPosY]) =>\n                                shipPosX === x && shipPosY === y\n                        )\n                ) || false;\n\n            if (ship) {\n                ship.increaseHit();\n            }\n\n            return ship;\n        },\n        isAllShipsSunk() {\n            return ships.every((ship) => ship.isSunk());\n        },\n    };\n};\n\nexport { createGameBoard };\n","const createPlayer = (name, board) => {\n    const obj = {\n        name,\n        board,\n    };\n\n    if (name === \"Computer\") {\n        obj.previousHitPos = null;\n        obj.possiblePos = [];\n\n        const proto = Object.assign(origin(), computer());\n        return Object.assign(Object.create(proto), obj);\n    }\n\n    return Object.assign(Object.create(origin()), obj);\n};\n\nconst origin = () => {\n    let attackedPos = [];\n\n    return {\n        attack(target, position) {\n            return target.board.receiveAttack(position);\n        },\n\n        addAttackedPos(position) {\n            attackedPos = [...attackedPos, position];\n            return attackedPos;\n        },\n        isDuplicateAttack(position) {\n            return attackedPos.some(\n                ([x, y]) => position[0] === x && position[1] === y\n            );\n        },\n    };\n};\n\nconst computer = () => {\n    let possiblePos = [];\n    let previousHitPos = null;\n\n    return {\n        setPreviousHitPos(position) {\n            previousHitPos = position;\n\n            return this.getPreviousHitPos();\n        },\n        getPreviousHitPos() {\n            if (!previousHitPos) return false;\n\n            return [previousHitPos[0], previousHitPos[1]];\n        },\n        setPossiblePos(position) {\n            possiblePos = position;\n            return [...possiblePos];\n        },\n        getPossiblePos() {\n            return [...possiblePos];\n        },\n        calcPossiblePos(position) {\n            const array = [];\n            const [x, y] = position;\n\n            if (x + 1 <= 10) {\n                array.push([x + 1, y]);\n            }\n\n            if (x - 1 >= 1) {\n                array.push([x - 1, y]);\n            }\n\n            if (y + 1 <= 10) {\n                array.push([x, y + 1]);\n            }\n\n            if (y - 1 >= 1) {\n                array.push([x, y - 1]);\n            }\n\n            return array;\n        },\n        filterPossiblePos(current) {\n            const previous = previousHitPos;\n            const possible = [...possiblePos];\n\n            let arr = [];\n\n            if (previous[0] === current[0]) {\n                arr = possible.filter(([x]) => x === previous[0]);\n\n                if (current[1] > previous[1]) {\n                    if (current[1] + 1 <= 10) {\n                        arr.push([current[0], current[1] + 1]);\n                    }\n                } else {\n                    if (current[1] - 1 >= 1) {\n                        arr.push([current[0], current[1] - 1]);\n                    }\n                }\n            } else {\n                arr = possible.filter(([, y]) => y === previous[1]);\n\n                if (current[0] > previous[0]) {\n                    if (current[0] + 1 <= 10) {\n                        arr.push([current[0] + 1, current[1]]);\n                    }\n                } else {\n                    if (current[0] - 1 >= 1) {\n                        arr.push([current[0] - 1, current[1]]);\n                    }\n                }\n            }\n\n            return arr;\n        },\n    };\n};\n\nexport { createPlayer };\n","const gameController = (() => {\n    let players = {\n        firstPlayer: null,\n        secondPlayer: null,\n    };\n\n    let attacker = null;\n    let endGame = false;\n\n    return {\n        getFirstPlayer() {\n            return players.firstPlayer;\n        },\n        getSecondPlayer() {\n            return players.secondPlayer;\n        },\n        setFirstPlayerBoard(newPlayer) {\n            return (players.secondPlayer = newPlayer);\n        },\n        setSecondPlayer(newPlayer) {\n            return (players.secondPlayer = newPlayer);\n        },\n        setPlayers(firstPlayer, secondPlayer) {\n            players.firstPlayer = firstPlayer;\n            players.secondPlayer = secondPlayer;\n\n            return players;\n        },\n        setAttacker(player) {\n            return (attacker = player);\n        },\n        getAttacker() {\n            return attacker;\n        },\n        toggleGameState() {\n            return (endGame = !endGame);\n        },\n        isEndGame() {\n            return endGame;\n        },\n    };\n})();\n\nexport { gameController };\n","const common = (() => {\n    return {\n        createGrid() {\n            let column = 1;\n            let row = 10;\n\n            const container = document.createElement(\"div\");\n\n            container.className = \"container\";\n\n            for (let i = 1; i <= 100; i++) {\n                const div = document.createElement(\"div\");\n\n                div.dataset.x = column;\n                div.dataset.y = row;\n\n                column++;\n\n                if (i % 10 === 0) {\n                    column = 1;\n                    row -= 1;\n                }\n\n                container.append(div);\n            }\n\n            return container;\n        },\n        load(resolve) {\n            let obj = {};\n\n            for (let key of resolve.keys()) {\n                const keys = key.match(/(?<=\\.\\/).+?(?=_panel|\\.png$)/g)[0];\n                const url = resolve(key);\n                obj[keys] = url;\n            }\n            return obj;\n        },\n        randomInteger(min, max) {\n            return Math.floor(min + Math.random() * (max - min + 1));\n        },\n    };\n})();\n\nexport { common };\n","import { gameController } from \"./handleGameController\";\nimport { common } from \"./handleCommon\";\n\nconst strategyPanel = (() => {\n    // catch DOM\n    const strategyPanelElement = document.querySelector(\".strategyPanel\");\n    const shipsSource = require.context(\n        \"../img/strategyPanel/ships\",\n        false,\n        /.\\/(?=.+?_panel).+/\n    );\n    const shipsImage = common.load(shipsSource);\n    return {\n        shipsImage,\n        resetContainer() {\n            const container = strategyPanelElement.querySelector(\".container\");\n            container.replaceWith(common.createGrid());\n        },\n        resetShips() {\n            const silhouettes = Array.from(\n                strategyPanelElement.querySelectorAll(\".silhouette\")\n            );\n\n            for (let el of silhouettes) {\n                if (el.closest(\".ships\")) {\n                    const message = el.querySelector(\"span\");\n                    message.textContent = \"\";\n                    message.className = \"\";\n                    el.hidden = false;\n                } else {\n                    el.remove();\n                }\n            }\n        },\n        togglePositionColor(position) {\n            for (let [x, y] of position) {\n                const grid = strategyPanelElement.querySelector(\n                    `[data-x='${x}'][data-y='${y}']`\n                );\n\n                grid.classList.toggle(\"placed\");\n            }\n        },\n        cancelSelectedShip() {\n            const hasSelectedShip =\n                strategyPanelElement.querySelector(\".selected\") ?? false;\n            if (!hasSelectedShip) return;\n\n            hasSelectedShip.classList.remove(\"selected\");\n        },\n        disableRotateBtn() {\n            const rotateBtn =\n                strategyPanelElement.querySelector(\".rotateBtn\") ?? false;\n            if (!rotateBtn) return;\n\n            rotateBtn.disabled = true;\n        },\n        isAllShipsSet() {\n            const firstPlayer = gameController.getFirstPlayer();\n\n            const silhouettes = Array.from(\n                strategyPanelElement.querySelectorAll(\".silhouette\")\n            );\n\n            let allShipSet = true;\n\n            for (let el of silhouettes) {\n                const ship = firstPlayer.board.getShip(el.dataset.name);\n                const message = el.querySelector(\"span\");\n\n                if (!ship || ship.getPos().length === 0) {\n                    message.textContent =\n                        \"This ship has not set a position yet\";\n                    message.className = \"message\";\n                    allShipSet = false;\n                } else {\n                    message.textContent = \"\";\n                    message.className = \"\";\n                }\n            }\n\n            return allShipSet;\n        },\n    };\n})();\n\nexport { strategyPanel };\n","import { gameController } from \"./handleGameController\";\nimport { createShip, SHIP_LIST } from \"./handleShip\";\nimport { common } from \"./handleCommon\";\n\nconst battlePanel = (() => {\n    // catch DOM\n    const battlePanelElement = document.querySelector(\".battlePanel\");\n    const shipsSource = require.context(\n        \"../img/battlefield/ships\",\n        false,\n        /.\\/(?!\\w+?_state).+/\n    );\n    const shipsImg = common.load(shipsSource);\n\n    return {\n        resetContainer() {\n            const fields = battlePanelElement.querySelectorAll(\".container\");\n            for (let el of fields) {\n                el.replaceWith(common.createGrid());\n            }\n        },\n        resetFleetState() {\n            const fleetStateImages =\n                battlePanelElement.querySelectorAll(\".fleetState img\");\n\n            for (let el of fleetStateImages) {\n                el.style = \"\";\n            }\n        },\n        setFieldName() {\n            const players = {\n                firstPlayer: gameController.getFirstPlayer(),\n                secondPlayer: gameController.getSecondPlayer(),\n            };\n\n            for (let player in players) {\n                const field = battlePanelElement.querySelector(\n                    `.field[data-player=\"${player}\"]`\n                );\n\n                field.dataset.owner = players[player].name;\n\n                field.querySelector(\".name\").textContent = players[player].name;\n            }\n        },\n        resetFieldActiveHover() {\n            const attacker = gameController.getAttacker();\n\n            const field =\n                battlePanelElement.querySelectorAll(`.field[data-player]`);\n\n            for (let el of field) {\n                if (el.dataset.owner !== attacker.name) {\n                    el.classList.add(\"activeHover\");\n                }\n            }\n        },\n        setShip() {\n            const firstPlayer = gameController.getFirstPlayer();\n\n            for (let ship of firstPlayer.board.getAllShips()) {\n                const name = ship.name;\n                const isRotate = ship.getRotate();\n                const [x, y] = ship.getCenterPos();\n                const src = shipsImg[name.toLowerCase()];\n\n                const grid = battlePanelElement.querySelector(\n                    `.field[data-owner=\"${firstPlayer.name}\"] div[data-x='${x}'][data-y='${y}']`\n                );\n\n                const template = `<div class=\"ship\" data-name=\"${name}\">\n                <img class=\"${isRotate ? \"rotateDown\" : \"\"}\"\n                    src=\"${src}\"\n                />\n            </div>`;\n\n                grid.innerHTML = template;\n            }\n        },\n        createComputer() {\n            const secondPlayer = gameController.getSecondPlayer();\n            const list = [...SHIP_LIST];\n\n            while (list.length !== 0) {\n                const shipIndex = common.randomInteger(0, list.length - 1);\n\n                const { name } = list.splice(shipIndex, 1)[0];\n\n                let ship = secondPlayer.board.getShip(name);\n\n                if (!ship) {\n                    ship = createShip({ name: name });\n                    secondPlayer.board.addShip(ship);\n                }\n\n                let isShipRotate = null;\n                let shipPos = null;\n                let position = null;\n\n                do {\n                    position = [\n                        common.randomInteger(1, 10),\n                        common.randomInteger(1, 10),\n                    ];\n\n                    isShipRotate =\n                        common.randomInteger(0, 1) === 0 ? true : false;\n\n                    shipPos = ship.setPos(position, isShipRotate);\n                } while (\n                    secondPlayer.board.isOutBounds(shipPos) ||\n                    secondPlayer.board.isOverlapShip(shipPos, name)\n                );\n\n                ship.setRotate(isShipRotate);\n                ship.setCenterPos(position);\n            }\n        },\n    };\n})();\n\nexport { battlePanel };\n","\"use strict\";\n\nimport \"./css/style.css\";\n\nimport { createShip } from \"./components/handleShip\";\nimport { createGameBoard } from \"./components/handleGameBoard\";\nimport { createPlayer } from \"./components/handlePlayer\";\n\nimport { strategyPanel } from \"./components/handleStrategyPanel\";\nimport { battlePanel } from \"./components/handleBattlePanel\";\nimport { gameController } from \"./components/handleGameController\";\nimport { common } from \"./components/handleCommon\";\n\nconst createBattleShip = () => {\n    // catch DOM\n    const mainElement = document.querySelector(\"main\");\n\n    // Event\n    mainElement.addEventListener(\"pointerdown\", startGame);\n\n    function startGame(e) {\n        const startBtn = e.target.closest(\".startBtn\");\n\n        if (!startBtn || mainElement.classList.contains(\"loading\")) return;\n\n        mainElement.classList.add(\"loading\");\n\n        const startScreenElement = mainElement.querySelector(\".startScreen\");\n        const gameBoardELement = mainElement.querySelector(\".gameBoard\");\n\n        const firstPlayerName =\n            startScreenElement.querySelector(\".firstPlayerName\")?.textContent ??\n            \"You\";\n        const secondPlayerName =\n            startScreenElement.querySelector(\".secondPlayerName\")\n                ?.textContent ?? \"Computer\";\n\n        const firstPlayer = createPlayer(firstPlayerName, createGameBoard());\n        const secondPlayer = createPlayer(secondPlayerName, createGameBoard());\n\n        gameController.setPlayers(firstPlayer, secondPlayer);\n        battlePanel.setFieldName();\n\n        strategyPanel.resetContainer();\n\n        mainElement.addEventListener(\n            \"transitionend\",\n            function showStrategyPanel(e) {\n                if (e.target !== mainElement) return;\n\n                startScreenElement.hidden = true;\n                gameBoardELement.hidden = false;\n\n                const strategyPanelElement =\n                    gameBoardELement.querySelector(\".strategyPanel\");\n\n                strategyPanelElement.addEventListener(\n                    \"pointerdown\",\n                    activeStrategyPanel\n                );\n\n                mainElement.classList.remove(\"loading\");\n\n                this.removeEventListener(\"transitionend\", showStrategyPanel);\n            }\n        );\n\n        mainElement.removeEventListener(\"pointerdown\", startGame);\n    }\n\n    function activeStrategyPanel(e) {\n        const target = e.target;\n\n        if (target.closest(\".rotateBtn\")) {\n            rotateShip(e);\n            return;\n        }\n\n        strategyPanel.cancelSelectedShip();\n        strategyPanel.disableRotateBtn();\n\n        if (target.closest(\".silhouette\")) {\n            selectShip(e);\n            return;\n        }\n\n        if (target.closest(\".resetBtn\")) {\n            const firstPlayer = gameController.getFirstPlayer();\n\n            firstPlayer.board = createGameBoard();\n\n            strategyPanel.resetContainer();\n            strategyPanel.resetShips();\n            return;\n        }\n\n        if (target.closest(\".startBattleBtn\")) {\n            if (!strategyPanel.isAllShipsSet()) return;\n\n            startBattle();\n\n            this.addEventListener(\n                \"transitionend\",\n                function hiddenStrategyPanel(e) {\n                    if (e.target !== this) return;\n\n                    this.hidden = true;\n\n                    this.removeEventListener(\n                        \"transitionend\",\n                        hiddenStrategyPanel\n                    );\n                }\n            );\n            this.removeEventListener(\"pointerdown\", activeStrategyPanel);\n            this.classList.remove(\"blur\");\n        }\n    }\n\n    function selectShip(e) {\n        const silhouetteElement = e.target.closest(\".silhouette\");\n        const silhouetteCoord = silhouetteElement.getBoundingClientRect();\n        if (\n            silhouetteCoord.left < 0 ||\n            silhouetteCoord.top < 0 ||\n            silhouetteCoord.right > document.documentElement.clientWidth ||\n            silhouetteCoord.bottom > document.documentElement.clientHeight\n        ) {\n            return;\n        }\n\n        const panelElement = mainElement.querySelector(\".panel\");\n        const rotateBtn = panelElement.querySelector(\".rotateBtn\");\n        const shipImage = silhouetteElement.querySelector(\"img\");\n        const message = silhouetteElement.querySelector(\"span\");\n\n        const pointerdownX = e.clientX;\n        const pointerdownY = e.clientY;\n\n        const shiftX = e.clientX - silhouetteCoord.left;\n        const shiftY = e.clientY - silhouetteCoord.top;\n\n        const firstPlayer = gameController.getFirstPlayer();\n        const isShipRotate =\n            shipImage.classList.contains(\"rotateDown\") ?? false;\n\n        const { name } = silhouetteElement.dataset;\n        let ship = firstPlayer.board.getShip(name) ?? false;\n\n        const moveAt = (coordX, coordY) => {\n            silhouetteElement.style.left = coordX + \"px\";\n            silhouetteElement.style.top = coordY + \"px\";\n        };\n        const dragShip = (e) => {\n            const panelCoord = panelElement.getBoundingClientRect();\n            let moved = null;\n\n            if (ship && ship.getPos().length !== 0) {\n                strategyPanel.togglePositionColor(ship.getPos());\n                ship.setPos([]);\n            }\n\n            if (\n                !moved &&\n                (e.clientX !== pointerdownX || e.clientY !== pointerdownY)\n            ) {\n                silhouetteElement.addEventListener(\"pointerup\", placeShip);\n                silhouetteElement.removeEventListener(\"pointerup\", stopDrag);\n                silhouetteElement.style.zIndex = 1000;\n                silhouetteElement.style.position = \"absolute\";\n                silhouetteElement.style.transform = \"none\";\n                panelElement.append(silhouetteElement);\n                moved = true;\n            }\n\n            let leftEdge = e.clientX - shiftX;\n            const rightEdge = panelCoord.right - silhouetteElement.offsetWidth;\n\n            let topEdge = e.clientY - shiftY;\n            const bottomEdge =\n                panelCoord.bottom - silhouetteElement.offsetHeight;\n\n            if (\n                leftEdge < 0 ||\n                leftEdge > rightEdge ||\n                topEdge < panelCoord.top ||\n                topEdge > bottomEdge\n            ) {\n                stopDrag();\n                return;\n            }\n\n            moveAt(leftEdge, topEdge);\n        };\n        const placeShip = (e) => {\n            silhouetteElement.hidden = true;\n\n            const droppableBelow = document\n                .elementFromPoint(e.clientX, e.clientY)\n                .closest(\".container > div\");\n\n            silhouetteElement.hidden = false;\n\n            if (droppableBelow) {\n                const position = [\n                    +droppableBelow.dataset.x,\n                    +droppableBelow.dataset.y,\n                ];\n\n                if (!ship) {\n                    ship = createShip({ name: name });\n                    firstPlayer.board.addShip(ship);\n                }\n\n                const newShipPos = ship.setPos(position, isShipRotate);\n\n                if (\n                    firstPlayer.board.isOutBounds(newShipPos) ||\n                    firstPlayer.board.isOverlapShip(newShipPos, name)\n                ) {\n                    message.textContent = \"cannot be set at this position\";\n                    message.className = \"message\";\n                    ship.setPos([]);\n                } else {\n                    const src = strategyPanel.shipsImage[name.toLowerCase()];\n\n                    if (src) {\n                        shipImage.src = src;\n                    }\n\n                    silhouetteElement.style = \"\";\n                    droppableBelow.append(silhouetteElement);\n                    ship.setRotate(isShipRotate);\n                    ship.setCenterPos(position);\n                    strategyPanel.togglePositionColor(newShipPos);\n                }\n            }\n\n            stopDrag();\n        };\n        const stopDrag = () => {\n            panelElement.removeEventListener(\"pointermove\", dragShip);\n            silhouetteElement.removeEventListener(\"pointerup\", placeShip);\n            silhouetteElement.removeEventListener(\"pointerup\", stopDrag);\n        };\n\n        if (silhouetteElement.closest(\".ships\")) {\n            const clone = silhouetteElement.cloneNode(true);\n            clone.hidden = true;\n            silhouetteElement.insertAdjacentElement(\"afterend\", clone);\n        }\n\n        silhouetteElement.classList.add(\"selected\");\n        rotateBtn.disabled = false;\n\n        if (isShipRotate) {\n            rotateBtn.querySelector(\"img\").className = \"\";\n        } else {\n            rotateBtn.querySelector(\"img\").className = \"rotateDown\";\n        }\n\n        message.textContent = \"\";\n        message.className = \"\";\n\n        silhouetteElement.addEventListener(\n            \"dragstart\",\n            (e) => {\n                e.preventDefault();\n            },\n            { once: true }\n        );\n        silhouetteElement.addEventListener(\"pointerup\", stopDrag);\n        panelElement.addEventListener(\"pointermove\", dragShip);\n    }\n\n    function rotateShip(e) {\n        const selectedShipElement =\n            mainElement.querySelector(\".selected\") ?? false;\n        if (!selectedShipElement) return;\n\n        const shipImage = selectedShipElement.querySelector(\"img\");\n\n        const rotateBtnImage = e.target.querySelector(\"img\") ?? e.target;\n\n        const { name } = selectedShipElement.dataset;\n\n        const firstPlayer = gameController.getFirstPlayer();\n        const ship = firstPlayer.board.getShip(name);\n\n        if (ship && selectedShipElement.closest(\".container\")) {\n            const isShipRotate = shipImage.classList.contains(\"rotateDown\")\n                ? false\n                : true;\n\n            const position = [\n                +selectedShipElement.parentElement.dataset.x,\n                +selectedShipElement.parentElement.dataset.y,\n            ];\n\n            const shipPos = ship.getPos();\n\n            strategyPanel.togglePositionColor(shipPos);\n\n            let newShipPos = ship.setPos(position, isShipRotate);\n\n            if (\n                firstPlayer.board.isOutBounds(newShipPos) ||\n                firstPlayer.board.isOverlapShip(newShipPos, name)\n            ) {\n                const message = selectedShipElement.querySelector(\"span\");\n                message.textContent = \"cannot rotate at this position\";\n                message.className = \"message\";\n                ship.setPos(position, !isShipRotate);\n                strategyPanel.togglePositionColor(shipPos);\n                return;\n            } else {\n                ship.setCenterPos(position);\n                ship.setRotate(isShipRotate);\n                strategyPanel.togglePositionColor(newShipPos);\n            }\n        }\n\n        shipImage.classList.toggle(\"rotateDown\");\n        rotateBtnImage.classList.toggle(\"rotateDown\");\n    }\n\n    function startBattle() {\n        const firstPlayer = gameController.getFirstPlayer();\n        const secondPlayer = gameController.getSecondPlayer();\n\n        gameController.setAttacker(firstPlayer);\n\n        if (gameController.isEndGame()) {\n            gameController.toggleGameState();\n        }\n\n        battlePanel.resetContainer();\n        battlePanel.resetFleetState();\n        battlePanel.resetFieldActiveHover();\n        battlePanel.setShip();\n\n        if (secondPlayer.name === \"Computer\") {\n            battlePanel.createComputer();\n        }\n\n        const battlePanelElement = mainElement.querySelector(\".battlePanel\");\n        battlePanelElement.addEventListener(\"pointerdown\", activeBattlePanel);\n    }\n\n    function activeBattlePanel(e) {\n        const target = e.target;\n\n        if (\n            !gameController.isEndGame() &&\n            target.closest(\".field .container > div\")\n        ) {\n            const position = [+e.target.dataset.x, +e.target.dataset.y];\n\n            const attacker = gameController.getAttacker();\n\n            if (attacker.isDuplicateAttack(position)) return;\n\n            sendAttack(position);\n            return;\n        }\n\n        if (target.closest(\".settingBtn\")) {\n            showAlertPanel();\n        }\n    }\n\n    function sendAttack([x, y]) {\n        const attacker = gameController.getAttacker();\n        const firstPlayer = gameController.getFirstPlayer();\n        const secondPlayer = gameController.getSecondPlayer();\n\n        const battlePanelElement = mainElement.querySelector(\".battlePanel\");\n\n        let attackedPlayer = null;\n\n        if (attacker.name === firstPlayer.name) {\n            attackedPlayer = secondPlayer;\n        } else {\n            attackedPlayer = firstPlayer;\n        }\n\n        const attackerField = battlePanelElement.querySelector(\n            `.field[data-owner=\"${attacker.name}\"]`\n        );\n        const attackedPlayerField = battlePanelElement.querySelector(\n            `.field[data-owner=\"${attackedPlayer.name}\"]`\n        );\n\n        const grid = attackedPlayerField.querySelector(\n            `.container div[data-x=\"${x}\"][data-y=\"${y}\"]`\n        );\n\n        const hitShip = attacker.attack(attackedPlayer, [x, y]);\n\n        if (hitShip) {\n            grid.classList.add(\"hit\");\n\n            if (attacker.name === \"Computer\") {\n                const ship = battlePanelElement.querySelector(\n                    `.ship[data-name=\"${hitShip.name}\"]`\n                );\n\n                const shipState = battlePanelElement.querySelector(\n                    `.fleetState img[data-name=\"${hitShip.name}\"]`\n                );\n\n                shipState.style.setProperty(\n                    \"--damaged-percent\",\n                    `${hitShip.getHealthyPercent()}%`\n                );\n\n                ship.addEventListener(\n                    \"animationend\",\n                    () => {\n                        ship.addEventListener(\n                            \"transitionend\",\n                            () => {\n                                ship.remove();\n                            },\n                            {\n                                once: true,\n                            }\n                        );\n\n                        if (hitShip.isSunk()) {\n                            ship.classList.add(\"destroyed\");\n                            attacker.setPreviousHitPos(null);\n                            attacker.setPossiblePos([]);\n                        } else {\n                            const hasPreviousPos = attacker.getPreviousHitPos();\n\n                            if (hasPreviousPos) {\n                                const sameAxisPos = attacker.filterPossiblePos([\n                                    x,\n                                    y,\n                                ]);\n                                attacker.setPossiblePos(sameAxisPos);\n                            } else {\n                                const possiblePos = attacker.calcPossiblePos([\n                                    x,\n                                    y,\n                                ]);\n\n                                attacker.setPossiblePos(possiblePos);\n                                attacker.setPreviousHitPos([x, y]);\n                            }\n                        }\n\n                        ship.classList.remove(\"shake\");\n                        attackerField.style.pointerEvents = \"auto\";\n                    },\n                    { once: true }\n                );\n\n                ship.classList.add(\"shake\");\n                attackerField.style.pointerEvents = \"none\";\n            }\n        } else {\n            grid.classList.add(\"missed\");\n        }\n\n        if (attackedPlayer.board.isAllShipsSunk()) {\n            gameController.toggleGameState();\n\n            attackedPlayerField.classList.remove(\"activeHover\");\n\n            showAlertPanel(attacker.name);\n            return;\n        }\n\n        attacker.addAttackedPos([x, y]);\n\n        attackedPlayerField.classList.remove(\"activeHover\");\n        attackerField.classList.add(\"activeHover\");\n\n        const newAttacker = gameController.setAttacker(attackedPlayer);\n\n        if (newAttacker.name === \"Computer\") {\n            let position = null;\n\n            do {\n                const possiblePos = newAttacker.getPossiblePos();\n\n                if (possiblePos.length > 0) {\n                    const index = common.randomInteger(\n                        0,\n                        possiblePos.length - 1\n                    );\n\n                    position = possiblePos.splice(index, 1)[0];\n                } else {\n                    position = [\n                        common.randomInteger(1, 10),\n                        common.randomInteger(1, 10),\n                    ];\n                }\n            } while (newAttacker.isDuplicateAttack(position));\n\n            sendAttack(position);\n        }\n    }\n\n    function showAlertPanel(winner = null) {\n        const alertPanel = mainElement.querySelector(\".alertPanel\");\n\n        let alert = null;\n\n        alertPanel.addEventListener(\n            \"pointerdown\",\n            function activeAlertPanel(e) {\n                const target = e.target;\n\n                if (target.closest(\".returnBtn\")) {\n                    target.addEventListener(\n                        \"animationend\",\n                        function closeAlertPanel() {\n                            target.classList.remove(\"clickEffect\");\n                            alert.classList.remove(\"show\");\n                            alertPanel.classList.remove(\"blur\");\n\n                            this.removeEventListener(\n                                \"animationend\",\n                                closeAlertPanel\n                            );\n                        }\n                    );\n\n                    target.classList.add(\"clickEffect\");\n                    this.removeEventListener(\"pointerdown\", activeAlertPanel);\n                    return;\n                }\n                if (target.closest(\".restartBtn\")) {\n                    const strategyPanelElement =\n                        mainElement.querySelector(\".strategyPanel\");\n                    const firstPlayer = gameController.getFirstPlayer();\n                    const secondPlayer = gameController.getSecondPlayer();\n\n                    target.addEventListener(\n                        \"animationend\",\n                        function restartGame() {\n                            strategyPanelElement.addEventListener(\n                                \"pointerdown\",\n                                activeStrategyPanel\n                            );\n\n                            strategyPanelElement.classList.add(\"blur\");\n\n                            target.classList.remove(\"clickEffect\");\n                            alert.classList.remove(\"show\");\n                            alertPanel.classList.remove(\"blur\");\n\n                            battlePanel.resetContainer();\n                            battlePanel.resetFleetState();\n\n                            this.removeEventListener(\n                                \"animationend\",\n                                restartGame\n                            );\n                        }\n                    );\n\n                    target.classList.add(\"clickEffect\");\n\n                    strategyPanel.resetContainer();\n                    strategyPanel.resetShips();\n\n                    const newFirstPlayer = createPlayer(\n                        firstPlayer.name,\n                        createGameBoard()\n                    );\n                    const newSecondPlayer = createPlayer(\n                        secondPlayer.name,\n                        createGameBoard()\n                    );\n\n                    gameController.setPlayers(newFirstPlayer, newSecondPlayer);\n\n                    strategyPanelElement.hidden = false;\n\n                    this.removeEventListener(\"pointerdown\", activeAlertPanel);\n                    return;\n                }\n                if (!winner && target.closest(\".quitBtn\")) {\n                    target.addEventListener(\n                        \"animationend\",\n                        function quitGame() {\n                            mainElement.addEventListener(\n                                \"transitionend\",\n                                function showMenu(e) {\n                                    if (e.target !== mainElement) return;\n\n                                    const startScreenElement =\n                                        mainElement.querySelector(\n                                            \".startScreen\"\n                                        );\n                                    const gameBoardElement =\n                                        mainElement.querySelector(\".gameBoard\");\n\n                                    const strategyPanelElement =\n                                        gameBoardElement.querySelector(\n                                            \".strategyPanel\"\n                                        );\n\n                                    startScreenElement.hidden = false;\n                                    gameBoardElement.hidden = true;\n\n                                    mainElement.addEventListener(\n                                        \"pointerdown\",\n                                        startGame\n                                    );\n\n                                    mainElement.classList.remove(\"loading\");\n\n                                    strategyPanelElement.classList.add(\"blur\");\n                                    strategyPanelElement.hidden = false;\n\n                                    battlePanel.resetContainer();\n                                    battlePanel.resetFleetState();\n\n                                    strategyPanel.resetShips();\n\n                                    target.classList.remove(\"clickEffect\");\n                                    alert.classList.remove(\"show\");\n                                    alertPanel.classList.remove(\"blur\");\n\n                                    this.removeEventListener(\n                                        \"transitionend\",\n                                        showMenu\n                                    );\n                                }\n                            );\n                            mainElement.classList.add(\"loading\");\n                            this.removeEventListener(\"animationend\", quitGame);\n                        }\n                    );\n\n                    target.classList.add(\"clickEffect\");\n\n                    this.removeEventListener(\"pointerdown\", activeAlertPanel);\n                }\n            }\n        );\n\n        if (winner) {\n            alert = alertPanel.querySelector(\".result\");\n            alert.querySelector(\n                \".winner\"\n            ).textContent = `${winner.toUpperCase()} WIN`;\n        } else {\n            alert = alertPanel.querySelector(\".alert\");\n        }\n\n        alert.classList.add(\"show\");\n        alertPanel.classList.add(\"blur\");\n    }\n\n    function preloadImage() {\n        const shipList = [\"carrier\", \"battleship\", \"patrol boat\"];\n        for (let ship of shipList) {\n            const img = document.createElement(\"img\");\n\n            img.src = strategyPanel.shipsImage[ship];\n            img.style.cssText = \"opacity: 0\";\n            mainElement.append(img);\n            img.remove();\n        }\n    }\n    preloadImage();\n};\n\ncreateBattleShip();\n","var map = {\n\t\"./battleship.png\": 225,\n\t\"./carrier.png\": 343,\n\t\"./destroyer.png\": 772,\n\t\"./patrol boat.png\": 423,\n\t\"./patrol boat_state.png\": 679,\n\t\"./submarine.png\": 788\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 314;","var map = {\n\t\"./battleship_panel.png\": 163,\n\t\"./carrier_panel.png\": 24,\n\t\"./patrol boat_panel.png\": 565\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 382;"],"names":["SHIP_LIST","name","length","createShip","ship","find","item","Object","assign","create","setProto","hits","rotate","pos","centerPos","createShipAllPos","isShipRotate","x","y","shipPos","push","increaseHit","isSunk","setPos","position","getPos","getHealthyPercent","setRotate","value","getRotate","setCenterPos","getCenterPos","createGameBoard","size","ships","getAdjacentPos","adjacentPos","posX","map","posY","isRotate","every","maxPosY","minPosY","Math","max","min","maxPosX","minPosX","addShip","getShip","getAllShips","isOutBounds","positions","isOverlapShip","allShipPos","result","some","x2","y2","receiveAttack","attackedPos","shipPosX","shipPosY","isAllShipsSunk","createPlayer","board","obj","previousHitPos","possiblePos","proto","origin","computer","attack","target","addAttackedPos","isDuplicateAttack","setPreviousHitPos","getPreviousHitPos","setPossiblePos","getPossiblePos","calcPossiblePos","array","filterPossiblePos","current","previous","possible","arr","filter","gameController","players","firstPlayer","secondPlayer","attacker","endGame","getFirstPlayer","getSecondPlayer","setFirstPlayerBoard","newPlayer","setSecondPlayer","setPlayers","setAttacker","player","getAttacker","toggleGameState","isEndGame","common","createGrid","column","row","container","document","createElement","className","i","div","dataset","append","load","resolve","key","keys","match","url","randomInteger","floor","random","strategyPanel","strategyPanelElement","querySelector","shipsSource","require","context","shipsImage","resetContainer","replaceWith","resetShips","silhouettes","Array","from","querySelectorAll","el","closest","message","textContent","hidden","remove","togglePositionColor","grid","classList","toggle","cancelSelectedShip","hasSelectedShip","disableRotateBtn","rotateBtn","disabled","isAllShipsSet","allShipSet","battlePanel","battlePanelElement","shipsImg","fields","resetFleetState","fleetStateImages","style","setFieldName","field","owner","resetFieldActiveHover","add","setShip","src","toLowerCase","template","innerHTML","createComputer","list","shipIndex","splice","createBattleShip","mainElement","addEventListener","startGame","e","startBtn","contains","startScreenElement","gameBoardELement","firstPlayerName","secondPlayerName","showStrategyPanel","activeStrategyPanel","removeEventListener","rotateShip","selectShip","startBattle","hiddenStrategyPanel","silhouetteElement","silhouetteCoord","getBoundingClientRect","left","top","right","documentElement","clientWidth","bottom","clientHeight","panelElement","shipImage","pointerdownX","clientX","pointerdownY","clientY","shiftX","shiftY","moveAt","coordX","coordY","dragShip","panelCoord","moved","placeShip","stopDrag","zIndex","transform","leftEdge","rightEdge","offsetWidth","topEdge","bottomEdge","offsetHeight","droppableBelow","elementFromPoint","newShipPos","clone","cloneNode","insertAdjacentElement","preventDefault","once","selectedShipElement","rotateBtnImage","parentElement","activeBattlePanel","sendAttack","showAlertPanel","attackedPlayer","attackerField","attackedPlayerField","hitShip","shipState","setProperty","hasPreviousPos","sameAxisPos","pointerEvents","newAttacker","index","winner","alertPanel","alert","activeAlertPanel","closeAlertPanel","restartGame","newFirstPlayer","newSecondPlayer","quitGame","showMenu","gameBoardElement","toUpperCase","preloadImage","shipList","img","cssText"],"sourceRoot":""}